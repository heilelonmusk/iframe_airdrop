  📁 node_modules/  [Hidden, 25172 files omitted] - External dependencies
  📁 ./ - Root directory containing the main project files, configurations, and essential documentation.
     📄 .netlifyignore - 🚀 Add a description here
     📄 nodemon.json - Configuration file for `nodemon`, enabling automatic server restarts during development.
     📄 AI_DEVELOPER_NOTES.md - Comprehensive technical documentation for AI development, covering model integrations, architecture, and debugging strategies.
     📄 netlify.toml - Configuration file managing Netlify deployments, routing, API function settings, and CORS policies.
     📄 descriptions.yaml - Metadata file storing structured descriptions for all repository files, keeping documentation updated.
     📄 TROUBLESHOOTING.md - In-depth guide for debugging known issues, resolving API failures, database connectivity, and deployment problems.
     📄 nonexistent.json - 🚀 Add a description here
     📄 config.yaml - Global configuration file managing system-wide settings, service integrations, and environment variables.
     📄 example.json - 🚀 Add a description here
     📄 webpack.config.js - 🚀 Add a description here
     📄 netlify_test.log - 🚀 Add a description here
     📄 downloaded_netlify_index.html - 🚀 Add a description here
     📄 README.md - Primary repository documentation, detailing project purpose, architecture, functionality, and contribution guidelines.
     📄 .gitignore - Specifies files and folders ignored by Git (e.g., .env, logs, build artifacts) to maintain repository cleanliness.
     📄 package-lock.json - Lock file for npm dependencies, ensuring version consistency across different environments.
     📄 package.json - Defines project dependencies, scripts, and metadata for backend and frontend packages.
     📄 .env - 🚀 Add a description here
     📄 .nvmrc - 🚀 Add a description here
     📄 file_tree.txt - Auto-generated file tracking real-time repository structure, ensuring documentation of all directories and files.
     📄 update_tree.py - Python script dynamically updating `file_tree.txt`, ensuring the repository structure remains documented.
     📄 downloaded_github_README.md - 🚀 Add a description here
     📄 checkQuestions.js - Script for validating and processing stored chatbot questions, ensuring consistency in AI-generated responses.
  📁 iframe/ - Module managing airdrop verification via blockchain wallet interactions.
     📄 airdrop_checker.js - JavaScript logic handling blockchain wallet verification and eligibility confirmation.
     📄 airdrop_checker.html - HTML page for UI rendering of the airdrop verification system.
  📁 tests/ - Contains all test scripts and debugging tools.
     📄 test_netlify.sh - 🚀 Add a description here
     📄 redis_test.js - 🚀 Add a description here
     📄 test.js - Primary test script validating API endpoints, chatbot functionality, and system responses.
     📄 unifiedAccess.test.js - 🚀 Add a description here
     📄 .gitkeep - Placeholder file ensuring Git tracks the `tests/` directory.
     📄 test_transformer.js - Test suite validating AI-powered `transformer.js`, ensuring accurate NLP processing and text refinement.
     📄 test_auto_update.sh - Shell script automating testing for `update_tree.py`, ensuring the repository structure remains updated.
  📁 script/ - Houses scripts for data updates, repository maintenance, and automation tasks.
     📄 update_csv_github.py - Automates updating CSV datasets in the GitHub repository.
     📄 update_whitelist.py - Script responsible for refreshing and maintaining the airdrop whitelist dataset.
     📄 assemble_public.sh - Shell script that consolidates all required public files before deployment.
     📄 unified_update.py - Master script coordinating multiple update operations across the repository.
     📄 update_noneligible.py - Updates the `non_eligible.csv` dataset, managing disqualified airdrop wallets.
     📄 trigger_dispatch.py - Python script triggering external GitHub Actions for repository synchronization.
  📁 example_folder/ - Placeholder directory, possibly used for testing or documentation. Needs verification if still required.
     📄 example.py - Sample Python script demonstrating API calls, chatbot interactions, or data processing logic.
  📁 netlify/ - Contains Netlify-specific functions and deployment settings.
  📁 netlify/functions/ - Houses serverless API functions executed on Netlify’s infrastructure.
     📄 triggerWhitelistUpdate.js - Netlify function responsible for automatically updating the airdrop whitelist dataset.
  📁 public/ - Contains static assets, including UI resources.
     📄 .gitkeep - Placeholder file ensuring Git tracks the `public/` directory.
     📄 _redirects - 🚀 Add a description here
  📁 logs/ - 🚀 Add a description here
     📄 app.log - 🚀 Add a description here
     📄 server.log - 🚀 Add a description here
  📁 .netlify/ - 🚀 Add a description here
     📄 netlify.toml - 🚀 Add a description here
  📁 .netlify/v1/ - 🚀 Add a description here
  📁 .netlify/v1/functions/ - 🚀 Add a description here
  📁 .netlify/blobs-serve/ - 🚀 Add a description here
  📁 .netlify/functions-internal/ - 🚀 Add a description here
  📁 .netlify/functions/ - 🚀 Add a description here
     📄 externalTokenListingUpdate.zip - 🚀 Add a description here
     📄 seedKnowledge.zip - 🚀 Add a description here
     📄 manifest.json - 🚀 Add a description here
     📄 server.zip - 🚀 Add a description here
     📄 knowledge.zip - 🚀 Add a description here
     📄 unifiedAccess.zip - 🚀 Add a description here
     📄 dymensionAPI.zip - 🚀 Add a description here
     📄 triggerWhitelistUpdate.zip - 🚀 Add a description here
  📁 .github/ - Contains automation workflows for CI/CD processes, including GitHub Actions.
  📁 .github/workflows/ - Houses GitHub Actions used for deployment automation, repository maintenance, and data synchronization.
     📄 update_noneligible.yml - Handles periodic updates for the `non_eligible.csv` dataset tracking disqualified wallet addresses.
     📄 update_whitelist.yml - CI/CD workflow responsible for updating the whitelist dataset (`whitelist.csv`).
     📄 retry_pending_workflows.yml - Auto-retries any pending GitHub Actions workflows that may have stalled or failed.
     📄 retry_cancelled.yml - GitHub workflow to automatically restart any canceled workflows, ensuring task completion.
     📄 update_csv.yml - Automates updating CSV-based data files within the repository.
  📁 api/ - Backend API module managing chatbot logic, data retrieval, and integrations with external systems.
     📄 seedKnowledge.js - Initial population script that seeds MongoDB with structured knowledge base data for the chatbot.
     📄 server.js - The central Express.js server file handling API requests, routing, and middleware execution.
     📄 externalTokenListingUpdate.js - Fetches and updates token listing data from external cryptocurrency market sources.
     📄 dymensionAPI.js - API module responsible for fetching and processing data from Dymension RollApps, used for blockchain-related functions.
     📄 knowledge.js - Core API endpoint for managing chatbot knowledge base queries and AI responses.
     📄 unifiedAccess.js - 🚀 Add a description here
  📁 ultron_chat/ - AI chatbot module handling interactive conversations.
     📄 ultronChat.js - Manages AI chatbot interactions, response generation, and user engagement.
     📄 ultronChat.css - Styling and animations for the Ultron chatbot UI.
     📄 ultronChat.png - Icon image used in the Ultron chatbot’s UI interface.
  📁 build/ - 🚀 Add a description here
     📄 server.bundle.js - 🚀 Add a description here
     📄 server.bundle.js.LICENSE.txt - 🚀 Add a description here
  📁 modules/ - Collection of AI and utility scripts, including NLP, learning, and logging functionalities.
  📁 modules/learning/ - Machine learning adaptation module enabling chatbot response refinement.
     📄 learningModule.js - Implements AI-driven learning mechanisms based on user interactions and feedback.
  📁 modules/intent/ - Handles AI intent recognition and NLP-based classification.
     📄 intentRecognizer.js - AI-powered module for recognizing user intent within chatbot interactions.
  📁 modules/nlp/ - Core Natural Language Processing (NLP) modules managing chatbot text generation and understanding.
     📄 nlpModel.js - Stores and handles AI language models used for natural language processing tasks.
     📄 transformer.js - AI-driven transformer model responsible for text refinement and chatbot response enhancement.
  📁 modules/logging/ - Centralized logging and event tracking system for monitoring AI behavior.
     📄 logger.js - Manages structured logging of chatbot interactions, debugging events, and system performance metrics.
  📁 data/ - Stores persistent data files, including whitelist and AI-related knowledge bases.
     📄 .gitkeep - Placeholder file ensuring Git tracks the `data/` directory structure.
     📄 whitelist.csv - Maintains a list of wallet addresses eligible for airdrop rewards, cross-referenced in API checks.
     📄 non_eligible.csv - Dataset tracking wallet addresses that are not eligible for airdrop rewards.
     📄 iframe_setting.csv - CSV configuration file containing iframe-related settings for UI rendering.
     📄 knowledge.json - JSON file storing static chatbot responses and predefined knowledge base data.
  📁 tmp/ - 🚀 Add a description here
  📁 tmp/logs/ - 🚀 Add a description here
     📄 netlify_test.log - 🚀 Add a description here